var map=L.map("map").setView([23.245322,81.615787],4);var wasteData={1:.017,2:.25,3:.12,4:.57,5:.27,6:.88,7:.95,8:.43,9:.047,10:.44,11:.44,12:.62,13:.16,14:.73,15:.61,16:.4,17:.36,18:.38,19:.3,20:.41,21:.18,22:.14,23:.41,24:.38,25:.28,26:.99,27:.28,28:.93,29:.77,30:.78,31:.019,32:.35,33:.88,34:.8,35:.54};L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw",{maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, '+'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, '+'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.light"}).addTo(map);var info=L.control();info.onAdd=function(map){this._div=L.DomUtil.create("div","info");this.update();return this._div};info.update=function(props){this._div.innerHTML="<h4>State statistics</h4>"+(props?"<b>"+props.NAME_1+"</b><br />Waste production: "+wasteData[props.ID_1]+" m<sup>3</sup>/hh/wk":"Hover over a state")};info.addTo(map);function getColor(d){return d>.8?"#800026":d>.7?"#BD0026":d>.6?"#E31A1C":d>.5?"#FC4E2A":d>.4?"#FD8D3C":d>.3?"#FEB24C":d>.2?"#FED976":"#FFEDA0"}function style(feature){return{weight:2,opacity:1,color:"white",dashArray:"3",fillOpacity:.7,fillColor:getColor(wasteData[feature.properties.ID_1])}}function highlightFeature(e){var layer=e.target;layer.setStyle({weight:5,color:"#666",dashArray:"",fillOpacity:.7});if(!L.Browser.ie&&!L.Browser.opera&&!L.Browser.edge){layer.bringToFront()}info.update(layer.feature.properties)}var geojson;function resetHighlight(e){geojson.resetStyle(e.target);info.update()}function zoomToFeature(e){map.fitBounds(e.target.getBounds())}function onEachFeature(feature,layer){layer.on({mouseover:highlightFeature,mouseout:resetHighlight,click:zoomToFeature})}geojson=L.geoJson(statesData,{style:style,onEachFeature:onEachFeature}).addTo(map);var legend=L.control({position:"bottomright"});legend.onAdd=function(map){var div=L.DomUtil.create("div","info legend"),grades=[0,.2,.3,.5,.6,.7,.8,1],labels=[],from,to;for(var i=0;i<grades.length;i++){from=grades[i];to=grades[i+1];labels.push('<i style="background:'+getColor(from+.01)+'"></i> '+from+(to?"&ndash;"+to:"+"))}div.innerHTML=labels.join("<br>");return div};legend.addTo(map);
